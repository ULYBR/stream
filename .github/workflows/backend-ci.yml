name: Backend CI

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend-*.yml'
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    paths:
      - 'backend/**'
    branches:
      - main
      - develop

env:
  PROJECT_PATH: backend
  SERVICE_NAME: streamhub-backend

jobs:
  lint:
    name: Lint Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.PROJECT_PATH }}/package-lock.json

      - name: Install dependencies
        run: cd ${{ env.PROJECT_PATH }} && npm ci

      - name: Run ESLint
        run: cd ${{ env.PROJECT_PATH }} && npm run lint

      - name: Check TypeScript
        run: cd ${{ env.PROJECT_PATH }} && npm run build

  test:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.PROJECT_PATH }}/package-lock.json

      - name: Install dependencies
        run: cd ${{ env.PROJECT_PATH }} && npm ci

      - name: Run tests
        run: cd ${{ env.PROJECT_PATH }} && npm test

      - name: Run test coverage
        run: cd ${{ env.PROJECT_PATH }} && npm run test:cov

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: ${{ env.PROJECT_PATH }}/coverage

  build:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.PROJECT_PATH }}/package-lock.json

      - name: Install dependencies
        run: cd ${{ env.PROJECT_PATH }} && npm ci

      - name: Build application
        run: cd ${{ env.PROJECT_PATH }} && npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: ${{ env.PROJECT_PATH }}/dist
          retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit
        run: cd ${{ env.PROJECT_PATH }} && npm audit --audit-level moderate

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: ${{ env.PROJECT_PATH }}