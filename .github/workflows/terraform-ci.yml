name: Infrastructure CI/CD

on:
  push:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform-*.yml'
    branches:
      - main
      - develop
  pull_request:
    paths:
      - 'terraform/**'
    branches:
      - main

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: us-east-1

jobs:
  terraform-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        run: |
          cd terraform
          terraform fmt -check -recursive

      - name: Terraform Init
        run: |
          cd terraform
          terraform init -backend=false

      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup LocalStack
        run: |
          docker run -d \
            --name localstack-terraform \
            -p 4568:4566 \
            -e SERVICES=dynamodb,sqs,sns,lambda,apigateway,s3,iam \
            -e DEBUG=1 \
            localstack/localstack:3.0

      - name: Wait for LocalStack
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:4568/_localstack/health; do sleep 2; done'

      - name: Terraform Init
        run: |
          cd terraform
          terraform init \
            -backend-config="endpoint=http://localhost:4568" \
            -backend-config="access_key=test" \
            -backend-config="secret_key=test"

      - name: Terraform Plan
        run: |
          cd terraform
          export AWS_ACCESS_KEY_ID=test
          export AWS_SECRET_ACCESS_KEY=test
          terraform plan \
            -var="environment=dev" \
            -var="localstack_endpoint=http://localhost:4568" \
            -out=tfplan

      - name: Save Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup LocalStack
        run: |
          docker run -d \
            --name localstack-terraform \
            -p 4568:4566 \
            -e SERVICES=dynamodb,sqs,sns,lambda,apigateway,s3,iam \
            -e DEBUG=1 \
            -e PERSISTENCE=1 \
            localstack/localstack:3.0

      - name: Wait for LocalStack
        run: |
          timeout 60 bash -c 'until curl -f http://localhost:4568/_localstack/health; do sleep 2; done'

      - name: Terraform Init
        run: |
          cd terraform
          terraform init \
            -backend-config="endpoint=http://localhost:4568" \
            -backend-config="access_key=test" \
            -backend-config="secret_key=test"

      - name: Terraform Apply
        run: |
          cd terraform
          export AWS_ACCESS_KEY_ID=test
          export AWS_SECRET_ACCESS_KEY=test
          terraform apply -auto-approve \
            -var="environment=dev" \
            -var="localstack_endpoint=http://localhost:4568"

      - name: Output infrastructure info
        run: |
          cd terraform
          terraform output -json > infrastructure-outputs.json

      - name: Save infrastructure outputs
        uses: actions/upload-artifact@v4
        with:
          name: infrastructure-outputs
          path: terraform/infrastructure-outputs.json