name: Frontend CI

on:
  push:
    paths:
      - 'front-end/**'
      - '.github/workflows/frontend-*.yml'
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    paths:
      - 'front-end/**'
    branches:
      - main
      - develop

env:
  PROJECT_PATH: front-end
  SERVICE_NAME: streamhub-frontend

jobs:
  lint:
    name: Lint Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.PROJECT_PATH }}/package-lock.json

      - name: Install dependencies
        run: cd ${{ env.PROJECT_PATH }} && npm ci

      - name: Run ESLint
        run: cd ${{ env.PROJECT_PATH }} && npm run lint

      - name: Check TypeScript
        run: cd ${{ env.PROJECT_PATH }} && npx tsc --noEmit

  test:
    name: Test Frontend
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.PROJECT_PATH }}/package-lock.json

      - name: Install dependencies
        run: cd ${{ env.PROJECT_PATH }} && npm ci

      - name: Run tests
        run: cd ${{ env.PROJECT_PATH }} && npm test

      - name: Run E2E tests
        run: |
          cd ${{ env.PROJECT_PATH }}
          npx playwright install
          npm run test:e2e

  build:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ env.PROJECT_PATH }}/package-lock.json

      - name: Install dependencies
        run: cd ${{ env.PROJECT_PATH }} && npm ci

      - name: Build application
        run: cd ${{ env.PROJECT_PATH }} && npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: ${{ env.PROJECT_PATH }}/dist
          retention-days: 7

  lighthouse:
    name: Lighthouse Audit
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ${{ env.PROJECT_PATH }}/dist

      - name: Serve built app
        run: |
          cd ${{ env.PROJECT_PATH }}
          npx serve -s dist -l 3000 &
          sleep 5

      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: '.lighthouserc.json'
          uploadArtifacts: true